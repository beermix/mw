--- gmp-6.2.0/mpn/x86_64/x86_64-defs.m4.orig	2020-10-01 22:00:35.891856900 -0700
+++ gmp-6.2.0/mpn/x86_64/x86_64-defs.m4	2020-10-01 22:01:29.579372600 -0700
@@ -93,10 +93,28 @@
 m4_assert_numargs(1)
 `	GLOBL	$1
 	TYPE($1,`function')
+	COFF_TYPE($1)
 $1:
 ')
 
 
+dnl  Usage: COFF_TYPE(GSYM_PREFIX`'foo)
+dnl
+dnl  Emit COFF style ".def ... .endef" type information for a function, when
+dnl  supported.  The argument should include any GSYM_PREFIX.
+dnl
+dnl  See autoconf macro GMP_ASM_COFF_TYPE for HAVE_COFF_TYPE.
+
+define(COFF_TYPE,
+m4_assert_numargs(1)
+m4_assert_defined(`HAVE_COFF_TYPE')
+`ifelse(HAVE_COFF_TYPE,yes,
+	`.def	$1
+	.scl	2
+	.type	32
+	.endef')')
+
+
 dnl  Usage: ASSERT([cond][,instructions])
 dnl
 dnl  If WANT_ASSERT is 1, output the given instructions and expect the given
--- gmp-6.2.0/configure.ac.orig	2020-10-01 22:24:41.048101000 -0700
+++ gmp-6.2.0/configure.ac	2020-10-01 22:24:56.657479600 -0700
@@ -3792,6 +3792,7 @@
         64|x32)
           GMP_INCLUDE_MPN(x86_64/x86_64-defs.m4)
           AC_DEFINE(HAVE_HOST_CPU_FAMILY_x86_64)
+          GMP_ASM_COFF_TYPE
 	  case $host in
 	    *-*-darwin*)
 	      GMP_INCLUDE_MPN(x86_64/darwin.m4) ;;
