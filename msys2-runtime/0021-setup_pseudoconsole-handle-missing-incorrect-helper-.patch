From cc8ec6da9f63017050d0ad75347bae5323c319c1 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Thu, 30 Apr 2020 17:10:33 +0200
Subject: [PATCH 21/N] setup_pseudoconsole(): handle missing/incorrect helper
 gracefully

When `cygwin-console-helper.exe` is either missing, or corresponds to a
different Cygwin runtime, we currently wait forever while setting up
access to the pseudo console, even long after the process is gone that
was supposed to signal that it set up access to the pseudo console.

Let's handle that more gracefully: if the process exited without
signaling, we cannot use the pseudo console. In that case, let's just
fall back to not using it.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/fhandler_tty.cc | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/winsup/cygwin/fhandler_tty.cc b/winsup/cygwin/fhandler_tty.cc
index 24b775e..c17ff62 100644
--- a/winsup/cygwin/fhandler_tty.cc
+++ b/winsup/cygwin/fhandler_tty.cc
@@ -3497,7 +3497,23 @@ fhandler_pty_master::setup_pseudoconsole ()
 			 TRUE, EXTENDED_STARTUPINFO_PRESENT,
 			 NULL, NULL, &si_helper.StartupInfo, &pi_helper))
       goto cleanup_event_and_pipes;
-    WaitForSingleObject (hello, INFINITE);
+    for (;;)
+      {
+        DWORD wait_result = WaitForSingleObject (hello, 500);
+	if (wait_result == WAIT_OBJECT_0)
+	  break;
+	if (wait_result != WAIT_TIMEOUT)
+	  goto cleanup_helper_process;
+	DWORD exit_code;
+	if (!GetExitCodeProcess(pi_helper.hProcess, &exit_code))
+	  goto cleanup_helper_process;
+	if (exit_code == STILL_ACTIVE)
+	  continue;
+	if (exit_code != 0 ||
+	    WaitForSingleObject (hello, 500) != WAIT_OBJECT_0)
+	  goto cleanup_helper_process;
+	break;
+      }
     CloseHandle (hello);
     CloseHandle (pi_helper.hThread);
     /* Retrieve pseudo console handles */
-- 
2.26.2

