diff -aurN coreutils-8.31/configure coreutils-8.31-fixed/configure
--- coreutils-8.31/configure	2019-03-10 16:35:43.000000000 -0700
+++ coreutils-8.31-fixed/configure	2019-11-24 13:45:19.963326300 -0800
@@ -43842,17 +43842,7 @@
     esac
   fi
 
-  if test -z "$ac_list_mounted_fs"; then
-    as_fn_error $? "could not determine how to read list of mounted file systems" "$LINENO" 5
-    # FIXME -- no need to abort building the whole package
-    # Can't build mountlist.c or anything that needs its functions
-  fi
-
-  if test $ac_list_mounted_fs = found; then
-    gl_cv_list_mounted_fs=yes
-  else
     gl_cv_list_mounted_fs=no
-  fi
 
   if test $gl_cv_list_mounted_fs = yes; then
 
@@ -72888,4 +72878,3 @@
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
 $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
 fi
-
diff -aurN coreutils-8.31/lib/c-strtod.c coreutils-8.31-fixed/lib/c-strtod.c
--- coreutils-8.31/lib/c-strtod.c	2019-02-10 19:25:16.000000000 -0800
+++ coreutils-8.31-fixed/lib/c-strtod.c	2019-11-24 13:47:20.104690100 -0800
@@ -26,7 +26,7 @@
 #include <stdlib.h>
 #include <string.h>
 
-#if LONG
+#if LONGCAT
 # define C_STRTOD c_strtold
 # define DOUBLE long double
 # define STRTOD_L strtold_l
@@ -41,7 +41,7 @@
 #endif
 
 #if defined LC_ALL_MASK \
-    && ((LONG ? HAVE_GOOD_STRTOLD_L : HAVE_GOOD_STRTOD_L) \
+    && ((LONGCAT ? HAVE_GOOD_STRTOLD_L : HAVE_GOOD_STRTOD_L) \
         || HAVE_WORKING_USELOCALE)
 
 /* Cache for the C locale object.
@@ -67,7 +67,7 @@
   DOUBLE r;
 
 #if defined LC_ALL_MASK \
-    && ((LONG ? HAVE_GOOD_STRTOLD_L : HAVE_GOOD_STRTOD_L) \
+    && ((LONGCAT ? HAVE_GOOD_STRTOLD_L : HAVE_GOOD_STRTOD_L) \
         || HAVE_WORKING_USELOCALE)
 
   locale_t locale = c_locale ();
@@ -78,7 +78,7 @@
       return 0; /* errno is set here */
     }
 
-# if (LONG ? HAVE_GOOD_STRTOLD_L : HAVE_GOOD_STRTOD_L)
+# if (LONGCAT ? HAVE_GOOD_STRTOLD_L : HAVE_GOOD_STRTOD_L)
 
   r = STRTOD_L (nptr, endptr, locale);
 
diff -aurN coreutils-8.31/lib/c-strtold.c coreutils-8.31-fixed/lib/c-strtold.c
--- coreutils-8.31/lib/c-strtold.c	2017-11-28 22:02:30.000000000 -0800
+++ coreutils-8.31-fixed/lib/c-strtold.c	2019-11-24 13:42:06.273691000 -0800
@@ -1,2 +1,2 @@
-#define LONG 1
+#define LONGCAT 1
 #include "c-strtod.c"
diff -aurN coreutils-8.31/lib/error.c coreutils-8.31-fixed/lib/error.c
--- coreutils-8.31/lib/error.c	2019-01-04 08:14:43.000000000 -0800
+++ coreutils-8.31-fixed/lib/error.c	2019-11-24 13:42:06.281690500 -0800
@@ -176,19 +176,7 @@
 {
   char const *s;
 
-#if _LIBC || GNULIB_STRERROR_R_POSIX || defined HAVE_STRERROR_R
-  char errbuf[1024];
-# if _LIBC || (!GNULIB_STRERROR_R_POSIX && STRERROR_R_CHAR_P)
-  s = __strerror_r (errnum, errbuf, sizeof errbuf);
-# else
-  if (__strerror_r (errnum, errbuf, sizeof errbuf) == 0)
-    s = errbuf;
-  else
-    s = 0;
-# endif
-#else
   s = strerror (errnum);
-#endif
 
 #if !_LIBC
   if (! s)
diff -aurN coreutils-8.31/lib/ftruncate.c coreutils-8.31-fixed/lib/ftruncate.c
--- coreutils-8.31/lib/ftruncate.c	2019-01-04 08:14:43.000000000 -0800
+++ coreutils-8.31-fixed/lib/ftruncate.c	2019-11-24 13:42:06.289691300 -0800
@@ -14,6 +14,10 @@
    You should have received a copy of the GNU General Public License along
    with this program; if not, see <https://www.gnu.org/licenses/>.  */
 
+/* Ensure that <windows.h> declares GetFileSizeEx.  */
+#  undef _WIN32_WINNT
+#  define _WIN32_WINNT 0x500
+
 #include <config.h>
 
 /* Specification.  */
@@ -29,10 +33,6 @@
 /* Large File Support: off_t is 64-bit, but chsize() takes only a 32-bit
    argument.  So, define a 64-bit safe SetFileSize function ourselves.  */
 
-/* Ensure that <windows.h> declares GetFileSizeEx.  */
-#  undef _WIN32_WINNT
-#  define _WIN32_WINNT _WIN32_WINNT_WIN2K
-
 /* Get declarations of the native Windows API functions.  */
 #  define WIN32_LEAN_AND_MEAN
 #  include <windows.h>
diff -aurN coreutils-8.31/lib/gethostname.c coreutils-8.31-fixed/lib/gethostname.c
--- coreutils-8.31/lib/gethostname.c	2019-01-04 08:14:43.000000000 -0800
+++ coreutils-8.31-fixed/lib/gethostname.c	2019-11-24 13:42:06.297688200 -0800
@@ -87,8 +87,9 @@
 #undef gethostname
 
 int
-rpl_gethostname (char *name, size_t len)
+PASCAL rpl_gethostname (char *name, int int_len)
 {
+  size_t len = (size_t) int_len;
   int r;
 
   if (len > INT_MAX)
diff -aurN coreutils-8.31/lib/randread.c coreutils-8.31-fixed/lib/randread.c
--- coreutils-8.31/lib/randread.c	2019-01-05 02:36:22.000000000 -0800
+++ coreutils-8.31-fixed/lib/randread.c	2019-11-24 13:42:06.305691900 -0800
@@ -176,9 +176,6 @@
     }
   ISAAC_SEED (struct timeval, gettimeofday (&v, NULL));
   ISAAC_SEED (pid_t, v = getpid ());
-  ISAAC_SEED (pid_t, v = getppid ());
-  ISAAC_SEED (uid_t, v = getuid ());
-  ISAAC_SEED (uid_t, v = getgid ());
 
 #ifdef lint
   /* Normally we like having the extra randomness from uninitialized
diff -aurN coreutils-8.31/lib/unistd.in.h coreutils-8.31-fixed/lib/unistd.in.h
--- coreutils-8.31/lib/unistd.in.h	2019-02-10 19:31:10.000000000 -0800
+++ coreutils-8.31-fixed/lib/unistd.in.h	2019-11-24 13:42:06.321692200 -0800
@@ -770,9 +770,9 @@
 #   undef gethostname
 #   define gethostname rpl_gethostname
 #  endif
-_GL_FUNCDECL_RPL (gethostname, int, (char *name, size_t len)
+_GL_FUNCDECL_RPL (gethostname, int PASCAL, (char *name, int len)
                                     _GL_ARG_NONNULL ((1)));
-_GL_CXXALIAS_RPL (gethostname, int, (char *name, size_t len));
+_GL_CXXALIAS_RPL (gethostname, int PASCAL, (char *name, int len));
 # else
 #  if !@HAVE_GETHOSTNAME@
 _GL_FUNCDECL_SYS (gethostname, int, (char *name, size_t len)
diff -aurN coreutils-8.31/lib/xstrtod.c coreutils-8.31-fixed/lib/xstrtod.c
--- coreutils-8.31/lib/xstrtod.c	2019-01-04 08:14:43.000000000 -0800
+++ coreutils-8.31-fixed/lib/xstrtod.c	2019-11-24 13:42:06.337691600 -0800
@@ -26,7 +26,7 @@
 #include <limits.h>
 #include <stdio.h>
 
-#if LONG
+#if LONGCAT
 # define XSTRTOD xstrtold
 # define DOUBLE long double
 #else
diff -aurN coreutils-8.31/lib/xstrtold.c coreutils-8.31-fixed/lib/xstrtold.c
--- coreutils-8.31/lib/xstrtold.c	2017-11-28 22:02:30.000000000 -0800
+++ coreutils-8.31-fixed/lib/xstrtold.c	2019-11-24 13:42:06.345691300 -0800
@@ -1,2 +1,2 @@
-#define LONG 1
+#define LONGCAT 1
 #include "xstrtod.c"
diff -aurN coreutils-8.31/src/sort.c coreutils-8.31-fixed/src/sort.c
--- coreutils-8.31/src/sort.c	2019-02-17 19:24:43.000000000 -0800
+++ coreutils-8.31-fixed/src/sort.c	2019-11-24 13:42:06.361691300 -0800
@@ -26,7 +26,6 @@
 #include <pthread.h>
 #include <sys/resource.h>
 #include <sys/types.h>
-#include <sys/wait.h>
 #include <signal.h>
 #include <assert.h>
 #include "system.h"
@@ -472,8 +471,6 @@
   -c, --check, --check=diagnose-first  check for sorted input; do not sort\n\
   -C, --check=quiet, --check=silent  like -c, but do not report first bad line\
 \n\
-      --compress-program=PROG  compress temporaries with PROG;\n\
-                              decompress them with PROG -d\n\
 "), stdout);
       fputs (_("\
       --debug               annotate the part of the line used to sort,\n\
@@ -538,7 +535,6 @@
 enum
 {
   CHECK_OPTION = CHAR_MAX + 1,
-  COMPRESS_PROGRAM_OPTION,
   DEBUG_PROGRAM_OPTION,
   FILES0_FROM_OPTION,
   NMERGE_OPTION,
@@ -553,7 +549,6 @@
 {
   {"ignore-leading-blanks", no_argument, NULL, 'b'},
   {"check", optional_argument, NULL, CHECK_OPTION},
-  {"compress-program", required_argument, NULL, COMPRESS_PROGRAM_OPTION},
   {"debug", no_argument, NULL, DEBUG_PROGRAM_OPTION},
   {"dictionary-order", no_argument, NULL, 'd'},
   {"ignore-case", no_argument, NULL, 'f'},
@@ -713,21 +708,7 @@
 static pid_t
 reap (pid_t pid)
 {
-  int status;
-  pid_t cpid = waitpid ((pid ? pid : -1), &status, (pid ? 0 : WNOHANG));
-
-  if (cpid < 0)
-    die (SORT_FAILURE, errno, _("waiting for %s [-d]"),
-         quoteaf (compress_program));
-  else if (0 < cpid && (0 < pid || delete_proc (cpid)))
-    {
-      if (! WIFEXITED (status) || WEXITSTATUS (status))
-        die (SORT_FAILURE, 0, _("%s [-d] terminated abnormally"),
-             quoteaf (compress_program));
-      --nprocs;
-    }
-
-  return cpid;
+  exit(SORT_FAILURE);
 }
 
 /* TEMP represents a new process; add it to the process table.  Create
@@ -3764,7 +3745,7 @@
       if (STREQ (files[i], "-"))
         continue;
 
-      if (euidaccess (files[i], R_OK) != 0)
+      if (access (files[i], R_OK) != 0)
         sort_die (_("cannot read"), files[i]);
     }
 }
@@ -4257,7 +4238,7 @@
     static int const sig[] =
       {
         /* The usual suspects.  */
-        SIGALRM, SIGHUP, SIGINT, SIGPIPE, SIGQUIT, SIGTERM,
+        SIGINT, SIGTERM,
 #ifdef SIGPOLL
         SIGPOLL,
 #endif
@@ -4303,7 +4284,6 @@
         }
 #endif
   }
-  signal (SIGCHLD, SIG_DFL); /* Don't inherit CHLD handling from parent.  */
 
   /* The signal mask is known, so it is safe to invoke exit_cleanup.  */
   atexit (exit_cleanup);
@@ -4428,12 +4408,6 @@
           checkonly = c;
           break;
 
-        case COMPRESS_PROGRAM_OPTION:
-          if (compress_program && !STREQ (compress_program, optarg))
-            die (SORT_FAILURE, 0, _("multiple compress programs specified"));
-          compress_program = optarg;
-          break;
-
         case DEBUG_PROGRAM_OPTION:
           debug = true;
           break;
@@ -4778,8 +4752,8 @@
     free (files);
 #endif
 
-  if (have_read_stdin && fclose (stdin) == EOF)
-    sort_die (_("close failed"), "-");
+  if (have_read_stdin)
+    fclose (stdin);
 
   return EXIT_SUCCESS;
 }
diff -aurN coreutils-8.31/src/uniq.c coreutils-8.31-fixed/src/uniq.c
--- coreutils-8.31/src/uniq.c	2019-01-05 02:36:22.000000000 -0800
+++ coreutils-8.31-fixed/src/uniq.c	2019-11-24 13:42:06.377686500 -0800
@@ -241,7 +241,6 @@
 size_opt (char const *opt, char const *msgid)
 {
   unsigned long int size;
-  verify (SIZE_MAX <= ULONG_MAX);
 
   switch (xstrtoul (opt, NULL, 10, &size, ""))
     {
@@ -469,9 +468,11 @@
     }
 
  closefiles:
-  if (ferror (stdin) || fclose (stdin) != 0)
+  if (ferror (stdin))
     die (EXIT_FAILURE, 0, _("error reading %s"), quoteaf (infile));
 
+  fclose (stdin);
+
   /* stdout is handled via the atexit-invoked close_stdout function.  */
 
   free (lb1.buffer);
