From 6353aa5427d672bf4a57c51ebfeeb0245679e441 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Thu, 19 Jan 2017 16:02:44 +0100
Subject: [PATCH 19/N] fixup??? Add functionality for converting UNIX paths in
 arguments and environment variables to Windows form for native Win32
 applications.

The purpose of the subp_convert() function is to convert POSIX path lists'
individual components. As a special case, the code allows URLs to be left
alone.

However, the code in ppl_convert() to identify what constitutes is buggy,
as it is too loose in what it interprets as URL (the mere substring "://"
will fool it into believing that, say, "/c/://share/c$" constitutes a
URL), and when subp_convert() then asks the find_path_start_and_type()
function to determine the type, it correctly identifies this as a POSIX
path list, and then subp_convert() calls ppl_convert() again, causing an
infinite recursion. The symptom is a "Bad address" error message.

As a stop-gap measure (leaving the fix that teaches ppl_convert() to be
more careful in what it identifies as URLs for later), let's just force
subp_convert() to trust the caller's judgement when the `is_url` parameter
is non-zero.

This fixes https://github.com/git-for-windows/git/issues/1033

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/msys2_path_conv.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/winsup/cygwin/msys2_path_conv.cc b/winsup/cygwin/msys2_path_conv.cc
index cf01b8c..1b07beb 100644
--- a/winsup/cygwin/msys2_path_conv.cc
+++ b/winsup/cygwin/msys2_path_conv.cc
@@ -540,7 +540,7 @@ void url_convert(const char** from, const char* to, char** dst, const char* dste
 
 void subp_convert(const char** from, const char* end, int is_url, char** dst, const char* dstend) {
     const char* begin = *from;
-    path_type type = find_path_start_and_type(from, 0, end);
+    path_type type = is_url ? URL : find_path_start_and_type(from, 0, end);
     copy_to_dst(begin, *from, dst, dstend);
 
     if (type == NONE) {
-- 
2.9.0

