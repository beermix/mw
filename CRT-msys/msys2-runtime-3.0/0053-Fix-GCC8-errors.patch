From 4dbdf309cfab0e9cb7419179b93119f415835b4c Mon Sep 17 00:00:00 2001
From: Alexey Pavlov <alexey.pawlow@gmail.com>
Date: Mon, 3 Jun 2019 20:15:50 +0200
Subject: [PATCH 53/N] Fix GCC8 errors

Signed-off-by: Alexey Pavlov <alexey.pawlow@gmail.com>
Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygserver/bsd_mutex.cc | 5 +++--
 winsup/cygwin/flock.cc        | 2 +-
 winsup/cygwin/miscfuncs.cc    | 4 ++--
 winsup/cygwin/path.cc         | 4 ++--
 winsup/cygwin/path.h          | 2 +-
 winsup/cygwin/pinfo.cc        | 6 +++---
 6 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/winsup/cygserver/bsd_mutex.cc b/winsup/cygserver/bsd_mutex.cc
index 52531bc..8bf7b8c 100644
--- a/winsup/cygserver/bsd_mutex.cc
+++ b/winsup/cygserver/bsd_mutex.cc
@@ -276,11 +276,12 @@ public:
 
 static msleep_sync_array *msleep_sync;
 
+extern struct msginfo msginfo;
+extern struct seminfo seminfo;
+
 void
 msleep_init (void)
 {
-  extern struct msginfo msginfo;
-  extern struct seminfo seminfo;
 
   msleep_glob_evt = CreateEvent (NULL, TRUE, FALSE, NULL);
   if (!msleep_glob_evt)
diff --git a/winsup/cygwin/flock.cc b/winsup/cygwin/flock.cc
index 860791d..c1a0978 100644
--- a/winsup/cygwin/flock.cc
+++ b/winsup/cygwin/flock.cc
@@ -1736,7 +1736,7 @@ lf_split (lockf_t *lock1, lockf_t *lock2, lockf_t **split)
   splitlock = *split;
   assert (splitlock != NULL);
   *split = splitlock->lf_next;
-  memcpy (splitlock, lock1, sizeof *splitlock);
+  memcpy (static_cast<void*>(splitlock), lock1, sizeof(*splitlock));
   /* We have to unset the obj HANDLE here which has been copied by the
      above memcpy, so that the calling function recognizes the new object.
      See post-lf_split handling in lf_setlock and lf_clearlock. */
diff --git a/winsup/cygwin/miscfuncs.cc b/winsup/cygwin/miscfuncs.cc
index b1c98f7..d396ae8 100644
--- a/winsup/cygwin/miscfuncs.cc
+++ b/winsup/cygwin/miscfuncs.cc
@@ -745,7 +745,7 @@ err:
    See FreeBSD src/lib/libc/amd64/string/memset.S
    and FreeBSD src/lib/libc/amd64/string/bcopy.S */
 
-asm volatile ("								\n\
+asm ("								\n\
 /*									\n\
  * Written by J.T. Conklin <jtc@NetBSD.org>.				\n\
  * Public domain.							\n\
@@ -812,7 +812,7 @@ L1:     rep								\n\
 	.seh_endproc							\n\
 ");
 
-asm volatile ("								\n\
+asm ("								\n\
 /*-									\n\
  * Copyright (c) 1990 The Regents of the University of California.	\n\
  * All rights reserved.							\n\
diff --git a/winsup/cygwin/path.cc b/winsup/cygwin/path.cc
index e5b1341..a884996 100644
--- a/winsup/cygwin/path.cc
+++ b/winsup/cygwin/path.cc
@@ -1322,7 +1322,7 @@ path_conv::serialize (HANDLE h, unsigned int &n) const
       n = 0;
       return NULL;
     }
-  memcpy (&pcf->pc, this, sizeof *this);
+  memcpy (static_cast<void*>(&pcf->pc), this, sizeof(*this));
   pcf->hdl = h;
   pcf->name_len = nlen;
   pcf->posix_len = plen;
@@ -1341,7 +1341,7 @@ path_conv::deserialize (void *bufp)
   char *p;
   HANDLE ret;
 
-  memcpy (this, &pcf->pc, sizeof *this);
+  memcpy (static_cast<void*>(this), &pcf->pc, sizeof *this);
   wide_path = uni_path.Buffer = NULL;
   uni_path.MaximumLength = uni_path.Length = 0;
   path = posix_path = NULL;
diff --git a/winsup/cygwin/path.h b/winsup/cygwin/path.h
index 69a78bc..10f9dbb 100644
--- a/winsup/cygwin/path.h
+++ b/winsup/cygwin/path.h
@@ -314,7 +314,7 @@ class path_conv
   path_conv& eq_worker (const path_conv& pc, const char *in_path)
   {
     free_strings ();
-    memcpy (this, &pc, sizeof pc);
+    memcpy (static_cast<void*>(this), &pc, sizeof(pc));
     /* The device info might contain pointers to allocated strings, in
        contrast to statically allocated strings.  Calling device::dup()
        will duplicate the string if the source was allocated. */
diff --git a/winsup/cygwin/pinfo.cc b/winsup/cygwin/pinfo.cc
index 1b8c842..fc38cdc 100644
--- a/winsup/cygwin/pinfo.cc
+++ b/winsup/cygwin/pinfo.cc
@@ -1417,13 +1417,13 @@ winpids::add (DWORD& nelem, bool winpid, DWORD pid)
   if (nelem >= npidlist)
     {
       npidlist += slop_pidlist;
-      pidlist = (DWORD *) realloc (pidlist, size_pidlist (npidlist + 1));
-      pinfolist = (pinfo *) realloc (pinfolist, size_pinfolist (npidlist + 1));
+      pidlist = (DWORD *) realloc (static_cast<void*>(pidlist), size_pidlist (npidlist + 1));
+      pinfolist = (pinfo *) realloc (static_cast<void*>(pinfolist), size_pinfolist (npidlist + 1));
     }
 
   _onreturn onreturn;
   pinfo& p = pinfolist[nelem];
-  memset (&p, 0, sizeof (p));
+  memset (static_cast<void*>(&p), 0, sizeof (p));
 
   bool perform_copy;
   if (cygpid == myself->pid)
-- 
2.9.0

