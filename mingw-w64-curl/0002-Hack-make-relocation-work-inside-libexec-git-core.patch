From 691bd66adb9ef080988a97bca46fb3c0328db261 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Wed, 31 Oct 2018 10:52:59 +0100
Subject: [PATCH 2/2] Hack: make relocation work inside libexec/git-core/

In Git for Windows, there is a copy of libcurl-4.dll in
/mingw64/libexec/git-core/ (which is where git-remote-https.exe lives,
and the libcurl-4.dll needs to be there because of DLL search path
issues, to prevent any C:\Windows\system32\libcurl-4.dll from being
picked up by mistake).

The current code trying to make libcurl-4.dll relocatable, however, is
unprepared for any path but /mingw64/bin/ (and it does not even verify
that it *is* in that location).

The design of the relocation code seems to be less than conducive to a
proper fix for this issue, so let's just be content with a quick 'n
dirty workaround.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 lib/url.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/lib/url.c b/lib/url.c
index f997cfe50..5d5f611d0 100644
--- a/lib/url.c
+++ b/lib/url.c
@@ -511,10 +511,16 @@ CURLcode Curl_init_userdefined(struct Curl_easy *data)
 #if defined(__MINGW32__)
     const size_t path_max = PATH_MAX;
     char relocated[PATH_MAX], *relative;
+    size_t len;
     get_dll_path(relocated, path_max);
     strip_n_suffix_folders(relocated, 1);
     strncat(relocated, "/", path_max);
-    relative = get_relative_path(CURL_BINDIR, CURL_CA_BUNDLE);
+    if((len = strlen(relocated)) > 18 &&
+       !strcmp(relocated + len - 18, "/libexec/git-core/")) {
+      /* Hack for Git for Windows */
+      relative = strdup("../../ssl/certs/ca-bundle.crt");
+    } else
+      relative = get_relative_path(CURL_BINDIR, CURL_CA_BUNDLE);
     strncat(relocated, relative, path_max - 1);
     simplify_path(relocated);
     result = Curl_setstropt(&set->str[STRING_SSL_CAFILE_ORIG], relocated);
-- 
2.21.0.windows.1.80.gdc2ae9a38264.dirty

