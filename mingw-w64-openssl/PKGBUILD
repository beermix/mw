# Maintainer: Alexey Pavlov <Alexpux@gmail.com>

_realname=openssl
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-1.0")
_ver=1.0.2
# use a pacman compatible version scheme
pkgver=${_ver/[a-z]/.${_ver//[0-9.]/}}
pkgrel=133
arch=('any')
pkgdesc="The Open Source toolkit for Secure Sockets Layer and Transport Layer Security (mingw-w64)"
depends=("${MINGW_PACKAGE_PREFIX}-ca-certificates" "${MINGW_PACKAGE_PREFIX}-gcc-libs" "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc")
options=('strip' '!buildflags' 'staticlibs')
license=('BSD')
url="https://www.openssl.org"
source=("${_realname}"::"git+https://github.com/openssl/${_realname}#branch=OpenSSL_1_0_2-stable"
        'openssl-1.0.0a-ldflags.patch'
        'openssl-1.0.2a-parallel-build.patch'
        'openssl-1.0.1-x32.patch'
        'openssl-0.9.6-x509.patch'
        '000-parallellez.patch'
        'openssl-1.0.1i-relocation.patch'
        'openssl-1.0-versioned-symbols.patch'
        'ssl3-test-failure.patch')

prepare() {
  cd ${srcdir}/${_realname}

  patch -p1 -i ${srcdir}/openssl-1.0.0a-ldflags.patch
  patch -p1 -i ${srcdir}/000-parallellez.patch
  patch -p1 -i ${srcdir}/openssl-1.0.1-x32.patch
  patch -p1 -i ${srcdir}/openssl-0.9.6-x509.patch
  patch -p1 -i ${srcdir}/openssl-1.0-versioned-symbols.patch
  patch -p1 -i ${srcdir}/ssl3-test-failure.patch
}

build() {
  # No support for out-of-source builds
  mkdir -p ${srcdir}/build-${CARCH}
  cp -a ${srcdir}/${_realname}/* ${srcdir}/build-${CARCH}

  # Use mingw cflags instead of hardcoded ones     enable-ec_nistp_64_gcc_128
  sed -i -e '/^"mingw64"/ s/-DL_ENDIAN -O3/-DL_ENDIAN -march=haswell -O3/' ${srcdir}/build-${CARCH}/Configure
  
  _mingw=mingw
  if $(echo ${CARCH} | grep -q x86_64); then
    _mingw=mingw64
  fi
  cd "${srcdir}/build-${CARCH}"
  export MSYS2_ARG_CONV_EXCL="--prefix="

#  CC='clang' CXX='clang++'

  ./Configure \
    --prefix=/oth \
    ${_mingw} \
    shared \
    threads \
    no-zlib \
    no-zlib-dynamic \
    no-ssl3-method \
    enable-camellia \
    enable-capieng \
    enable-idea \
    enable-mdc2 \
    enable-ec2m \
    enable-md2 \
    enable-rc5 \
    enable-tlsext \
    enable-rfc3779 \
    enable-ec_nistp_64_gcc_128

    make
}

package() {
  cd "${srcdir}/build-${CARCH}"
  make INSTALL_PREFIX="${pkgdir}" install_sw

  chmod -R 755 "${pkgdir}/oth"/bin
  chmod -R 644 "${pkgdir}/oth"/lib
  chmod -R 755 "${pkgdir}/oth"/lib/engines

  install -m644 ms/applink.c "${pkgdir}/oth"/include/openssl/
  rm -rf "${pkgdir}/oth"/bin/c_rehash
  rm -rf "${pkgdir}/oth"/{ssl/misc}
}
