# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Mateusz Mikula <mati865@gmail.com>

_realname=binutils
_base_ver=2.33
pkgbase=mingw-w64-${_realname}-git
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-git")
# replaces="${MINGW_PACKAGE_PREFIX}-${_realname}=${_base_ver}"
pkgver=2.33.r98881.69a29b6e064
pkgrel=1
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}=${pkgver}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgdesc="A set of programs to assemble and manipulate binary and object files"
arch=('any')
url="https://www.gnu.org/software/binutils/"
license=('GPL')
#groups=("${MINGW_PACKAGE_PREFIX}-toolchain")
depends=("${MINGW_PACKAGE_PREFIX}-libiconv" "${MINGW_PACKAGE_PREFIX}-zlib")
#checkdepends=('dejagnu' 'bc')
makedepends=("${MINGW_PACKAGE_PREFIX}-libiconv" "${MINGW_PACKAGE_PREFIX}-zlib" "git")
options=('staticlibs' '!distcc' '!ccache' 'debug' '!strip')
#install=binutils.install
source=("${_realname}"::"git+https://sourceware.org/git/binutils-gdb.git#branch=${_realname}-${_base_ver//./_}-branch"
        0001-enable-gold-on.mingw32.patch
        0002-check-for-unusual-file-harder.patch
        0010-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch
        0020-binutils_2.31_mkdtemp_impl.patch
        0110-binutils-mingw-gnu-print.patch
        0300-default-secure-pe-flags.patch
        0310-reproducible-import-libraries.patch)

pkgver() {
  cd "$srcdir/$_realname"
  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd ${srcdir}/${_realname}
  ${GIT_AM} ${srcdir}/binutils-stable-branch.patch
  ${GIT_AM} ${srcdir}/0001-enable-gold-on.mingw32.patch
  ${GIT_AM} ${srcdir}/0002-check-for-unusual-file-harder.patch
  ${GIT_AM} ${srcdir}/0010-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch
  ${GIT_AM} ${srcdir}/0020-binutils_2.31_mkdtemp_impl.patch
  ${GIT_AM} ${srcdir}/0110-binutils-mingw-gnu-print.patch

  #rm -rf gdb readline libdecnumber sim
}

build() {
  if [ "${CARCH}" = "x86_64" ]; then
    local _conf='--enable-64-bit-bfd'
  else
    local _conf=''
    LDFLAGS+=" -Wl,--large-address-aware"
  fi

  if check_option "debug" "y"; then
    CFLAGS+=" -O0"
  fi

  cd $srcdir
  rm -rf build-${MINGW_CHOST}
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}
  ../${_realname}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --disable-werror \
    --enable-lto \
    --with-sysroot=${MINGW_PREFIX} \
    --with-libiconv-prefix=${MINGW_PREFIX} \
    ${_conf} \
    --enable-nls \
    --disable-rpath \
    --disable-multilib \
    --enable-install-libiberty \
    --enable-targets=x86_64-pc-mingw64,x86_64-pc-mingw32 \
    --enable-plugins \
    --enable-gold \
    --enable-silent-rules \
    --with-system-zlib \
    --enable-threads \
    --disable-sim \
    --disable-gdb \
    --disable-shared

  noti MAKEINFO=true make
}

check() {
  cd ${srcdir}/build-${MINGW_CHOST}

  # unset LDFLAGS as testsuite makes assumptions about which ones are active
  # do not abort on errors - manually check log files
  make LDFLAGS="" -k check || true
}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} MAKEINFO=true install

  mkdir -p ${pkgdir}${MINGW_PREFIX}/{lib,include}/${_realname}
  mkdir -p ${pkgdir}${MINGW_PREFIX}/${MINGW_CHOST}/include
  cp ${pkgdir}${MINGW_PREFIX}/include/ansidecl.h ${pkgdir}${MINGW_PREFIX}/${MINGW_CHOST}/include/
  mv ${pkgdir}${MINGW_PREFIX}/include/*.h ${pkgdir}${MINGW_PREFIX}/include/${_realname}
  mv ${pkgdir}${MINGW_PREFIX}/lib/*.a ${pkgdir}${MINGW_PREFIX}/lib/${_realname}

  # Add some useful headers
  #install -m644 ${srcdir}/${_realname}-${pkgver}/include/libiberty.h ${pkgdir}${MINGW_PREFIX}/include
  #install -m644 ${srcdir}/${_realname}-${pkgver}/include/demangle.h ${pkgdir}${MINGW_PREFIX}/include

  find ${pkgdir}${MINGW_PREFIX}/share -type f -iname "opcodes.mo" -o -iname "bfd.mo" | xargs -rtl1 rm
}
