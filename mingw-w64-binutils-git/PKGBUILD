# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=binutils
_base_ver=2.34
pkgbase=mingw-w64-${_realname}
_sourcedir=${_realname}-git
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
# replaces="${MINGW_PACKAGE_PREFIX}-${_realname}=${_base_ver}"
pkgver=2.34.r100265.1a4d543e78c
pkgrel=1
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}=${pkgver}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgdesc="A set of programs to assemble and manipulate binary and object files (mingw-w64)"
arch=('any')
url="https://www.gnu.org/software/binutils/"
license=('GPL')
groups=("${MINGW_PACKAGE_PREFIX}-toolchain")
depends=("${MINGW_PACKAGE_PREFIX}-libiconv" "${MINGW_PACKAGE_PREFIX}-zlib")
#checkdepends=('dejagnu' 'bc')
makedepends=("${MINGW_PACKAGE_PREFIX}-libiconv" "${MINGW_PACKAGE_PREFIX}-zlib" "git")
options=('staticlibs' '!distcc' '!ccache') # 'debug' '!strip')
#install=binutils.install
source=(#"${_sourcedir}"::"git+https://sourceware.org/git/binutils-gdb.git#branch=${_realname}-${_base_ver//./_}-branch"
        "${_sourcedir}"::"git+https://sourceware.org/git/binutils-gdb.git"
        0001-enable-gold-on.mingw32.patch
        0002-check-for-unusual-file-harder.patch
        0010-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch
        0020-binutils_2.31_mkdtemp_impl.patch
        0110-binutils-mingw-gnu-print.patch
        0120-windres-handle-spaces.patch)

pkgver() {
  cd "$srcdir/$_sourcedir"
  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd ${srcdir}/${_sourcedir}
  #git am "${srcdir}"/0001-MinGW-w64-Two-fixes-for-unusual-files.patch
  patch -p1 -i "${srcdir}"/0001-enable-gold-on.mingw32.patch
  patch -p1 -i "${srcdir}"/0002-check-for-unusual-file-harder.patch
  patch -p1 -i "${srcdir}"/0010-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch
  patch -p1 -i "${srcdir}"/0020-binutils_2.31_mkdtemp_impl.patch
  patch -p1 -i "${srcdir}"/0110-binutils-mingw-gnu-print.patch
  patch -p1 -i "${srcdir}"/0120-windres-handle-spaces.patch

  rm -rf gdb readline libdecnumber sim

  sed -i '/^development=/s/true/false/' bfd/development.sh
}

build() {
  if [ "${CARCH}" = "x86_64" ]; then
    local _conf='--enable-64-bit-bfd'
  else
    local _conf=''
    LDFLAGS+=" -Wl,--large-address-aware"
  fi

  if check_option "debug" "y"; then
    CFLAGS+=" -O0"
  fi

  cd $srcdir
  rm -rf build-${MINGW_CHOST}
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}
  ../${_sourcedir}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --disable-werror \
    --enable-lto \
    --with-sysroot=${MINGW_PREFIX} \
    --with-libiconv-prefix=${MINGW_PREFIX} \
    ${_conf} \
    --enable-nls \
    --disable-rpath \
    --disable-multilib \
    --enable-install-libiberty \
    --enable-plugins \
    --enable-gold \
    --disable-cet \
    --disable-sim \
    --disable-gdb \
    --enable-targets=x86_64-*-mingw64 \
    --enable-silent-rules \
    --disable-shared

  make MAKEINFO=true
}

check() {
  cd ${srcdir}/build-${MINGW_CHOST}

  # unset LDFLAGS as testsuite makes assumptions about which ones are active
  # do not abort on errors - manually check log files
  make LDFLAGS="" -k check || true
}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}
  make MAKEINFO=true DESTDIR=${pkgdir} install

  mkdir -p ${pkgdir}${MINGW_PREFIX}/{lib,include}/${_sourcedir}
  mkdir -p ${pkgdir}${MINGW_PREFIX}/${MINGW_CHOST}/include
  cp ${pkgdir}${MINGW_PREFIX}/include/ansidecl.h ${pkgdir}${MINGW_PREFIX}/${MINGW_CHOST}/include/
  mv ${pkgdir}${MINGW_PREFIX}/include/*.h ${pkgdir}${MINGW_PREFIX}/include/${_sourcedir}
  mv ${pkgdir}${MINGW_PREFIX}/lib/*.a ${pkgdir}${MINGW_PREFIX}/lib/${_sourcedir}

  # Add some useful headers
  #install -m644 ${srcdir}/${_sourcedir}-${pkgver}/include/libiberty.h ${pkgdir}${MINGW_PREFIX}/include
  #install -m644 ${srcdir}/${_sourcedir}-${pkgver}/include/demangle.h ${pkgdir}${MINGW_PREFIX}/include

  find ${pkgdir}${MINGW_PREFIX}/share -type f -iname "opcodes.mo" -o -iname "bfd.mo" | xargs -rtl1 rm

#  ln -s addr2line.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-addr2line.exe
#  ln -s ar.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-ar.exe
#  ln -s as.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-as.exe
#  ln -s c++filt.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-c++filt.exe
#  ln -s dlltool.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-dlltool.exe
#  ln -s dllwrap.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-dllwrap.exe
#  ln -s dwp.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-dwp.exe
#  ln -s elfedit.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-elfedit.exe
#  ln -s gprof.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-gprof.exe
#  ln -s ld.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-ld.exe
#  ln -s ld.bfd.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-ld.bfd.exe
#  ln -s ld.gold.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-ld.gold.exe
#  ln -s nm.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-nm.exe
#  ln -s objcopy.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-objcopy.exe
#  ln -s objdump.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-objdump.exe
#  ln -s ranlib.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-ranlib.exe
#  ln -s readelf.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-readelf.exe
#  ln -s size.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-size.exe
#  ln -s strings.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-strings.exe
#  ln -s strip.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-strip.exe
#  ln -s windmc.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-windmc.exe
#  ln -s windres.exe ${pkgdir}${MINGW_PREFIX}/bin/${MINGW_CHOST}-windres.exe
}
