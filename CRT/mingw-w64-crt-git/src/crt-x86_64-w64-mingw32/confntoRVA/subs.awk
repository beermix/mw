BEGIN {
S["am__EXEEXT_FALSE"]="#"
S["am__EXEEXT_TRUE"]=""
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["ADD_CXX_ONLY_WARNING_FLAGS"]=""
S["ADD_C_CXX_WARNING_FLAGS"]="-Wall -Wextra -Wformat -Wstrict-aliasing -Wshadow -Wpacked -Winline"
S["ADD_C_ONLY_WARNING_FLAGS"]="-Wimplicit-function-declaration -Wmissing-noreturn -Wmissing-prototypes"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["ENABLE_TESTS_UNICODE_FALSE"]="#"
S["ENABLE_TESTS_UNICODE_TRUE"]=""
S["ENABLE_SOFTMATH_FALSE"]=""
S["ENABLE_SOFTMATH_TRUE"]="#"
S["ENABLE_REGISTEREDPRINTF_FALSE"]=""
S["ENABLE_REGISTEREDPRINTF_TRUE"]="#"
S["ENABLE_PRINTF128_FALSE"]=""
S["ENABLE_PRINTF128_TRUE"]="#"
S["ENABLE_DFP_FALSE"]=""
S["ENABLE_DFP_TRUE"]="#"
S["MSVCRT_LIB"]="libmsvcrt-os.a"
S["DELAY_IMPORT_LIBS_FALSE"]=""
S["DELAY_IMPORT_LIBS_TRUE"]="#"
S["PRIVATE_EXPORTS_FALSE"]=""
S["PRIVATE_EXPORTS_TRUE"]="#"
S["WITH_GENLIB_FALSE"]=""
S["WITH_GENLIB_TRUE"]="#"
S["GENLIB"]=""
S["LIBARM32SUFFIXDIR"]="libarm32"
S["LIBARM64SUFFIXDIR"]="libarm64"
S["LIBX8632SUFFIXDIR"]="lib32"
S["LIBX8664SUFFIXDIR"]="lib"
S["LIBARM64_FALSE"]=""
S["LIBARM64_TRUE"]="#"
S["LIBARM32_FALSE"]=""
S["LIBARM32_TRUE"]="#"
S["LIB64_FALSE"]="#"
S["LIB64_TRUE"]=""
S["LIB32_FALSE"]=""
S["LIB32_TRUE"]="#"
S["W32API_FALSE"]=""
S["W32API_TRUE"]="#"
S["AS"]="as"
S["am__fastdepCCAS_FALSE"]="#"
S["am__fastdepCCAS_TRUE"]=""
S["CCASDEPMODE"]="depmode=gcc3"
S["CCASFLAGS"]="-g -O2"
S["CCAS"]="x86_64-w64-mingw32-gcc"
S["ac_ct_AR"]="ar"
S["AR"]="ar"
S["DLLTOOL"]="dlltool"
S["RANLIB"]="ranlib"
S["CPP"]="x86_64-w64-mingw32-gcc -E"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]=""
S["CXXFLAGS"]="-g -O2"
S["CXX"]="x86_64-w64-mingw32-g++"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=".exe"
S["ac_ct_CC"]=""
S["CPPFLAGS"]=""
S["LDFLAGS"]=""
S["CFLAGS"]="-g -O2"
S["CC"]="x86_64-w64-mingw32-gcc"
S["SED"]="/usr/bin/sed"
S["WITHSYSROOT_FALSE"]="#"
S["WITHSYSROOT_TRUE"]=""
S["TARGET_SYSTEM_ROOT"]="/mingw64/x86_64-w64-mingw32"
S["host_os"]="mingw32"
S["host_vendor"]="w64"
S["host_cpu"]="x86_64"
S["host"]="x86_64-w64-mingw32"
S["build_os"]="mingw32"
S["build_vendor"]="w64"
S["build_cpu"]="x86_64"
S["build"]="x86_64-w64-mingw32"
S["MAINT"]="#"
S["MAINTAINER_MODE_FALSE"]=""
S["MAINTAINER_MODE_TRUE"]="#"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__untar"]="$${TAR-tar} xf -"
S["am__tar"]="$${TAR-tar} chof - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="gawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="/usr/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]=""
S["install_sh"]="${SHELL} /home/User/mw-my/crt/mingw-w64-crt-git/src/mingw-w64/mingw-w64-crt/build-aux/install-sh"
S["MAKEINFO"]="${SHELL} /home/User/mw-my/crt/mingw-w64-crt-git/src/mingw-w64/mingw-w64-crt/build-aux/missing makeinfo"
S["AUTOHEADER"]="${SHELL} /home/User/mw-my/crt/mingw-w64-crt-git/src/mingw-w64/mingw-w64-crt/build-aux/missing autoheader"
S["AUTOMAKE"]="${SHELL} /home/User/mw-my/crt/mingw-w64-crt-git/src/mingw-w64/mingw-w64-crt/build-aux/missing automake-1.15"
S["AUTOCONF"]="${SHELL} /home/User/mw-my/crt/mingw-w64-crt-git/src/mingw-w64/mingw-w64-crt/build-aux/missing autoconf"
S["ACLOCAL"]="${SHELL} /home/User/mw-my/crt/mingw-w64-crt-git/src/mingw-w64/mingw-w64-crt/build-aux/missing aclocal-1.15"
S["VERSION"]="4.0b"
S["PACKAGE"]="mingw-w64-runtime"
S["CYGPATH_W"]="cygpath -w"
S["am__isrc"]=" -I$(srcdir)"
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_alias"]="x86_64-w64-mingw32"
S["host_alias"]="x86_64-w64-mingw32"
S["build_alias"]="x86_64-w64-mingw32"
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/mingw64/x86_64-w64-mingw32"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="mingw-w64-public@lists.sourceforge.net"
S["PACKAGE_STRING"]="mingw-w64-runtime 4.0b"
S["PACKAGE_VERSION"]="4.0b"
S["PACKAGE_TARNAME"]="mingw-w64-runtime"
S["PACKAGE_NAME"]="mingw-w64-runtime"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

