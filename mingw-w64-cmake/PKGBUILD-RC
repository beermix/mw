# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=cmake
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.19.0
pkgrel=1
pkgdesc="A cross-platform open-source make system (mingw-w64)"
arch=('any')
url="https://www.cmake.org/"
license=("MIT")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-bzip2"
             "${MINGW_PACKAGE_PREFIX}-emacs"
             "${MINGW_PACKAGE_PREFIX}-ncurses"
             "${MINGW_PACKAGE_PREFIX}-xz"
             "${MINGW_PACKAGE_PREFIX}-zstd")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-pkg-config"
         "${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-jsoncpp"
         "${MINGW_PACKAGE_PREFIX}-libarchive"
         "${MINGW_PACKAGE_PREFIX}-libuv"
         "${MINGW_PACKAGE_PREFIX}-rhash"
         "${MINGW_PACKAGE_PREFIX}-zlib")
optdepends=("${MINGW_PACKAGE_PREFIX}-qt5: CMake Qt GUI"
            "${MINGW_PACKAGE_PREFIX}-emacs: for cmake emacs mode")
options=('staticlibs') # '!strip' 'debug'
source=("https://www.cmake.org/files/v${pkgver%.*}/${_realname}-${pkgver}-rc2.tar.gz"
        "0001-Windows-Add-missing-stringapiset.h-include.patch"
        "0003-Disable-response-files-for-MSYS-Generator.patch"
        "0005-Do-not-install-Qt-bundle-in-cmake-gui.patch"
        "0006-pkg-config-Add-dont-define-prefix-when-PKG_CONFIG_WI.patch"
        "0007-Do-not-generate-import-libs-for-exes.patch"
        "0008-Output-line-numbers-in-callstacks.patch"
        "0009-Support-exporting-all-symbols-with-MinGW.patch")

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Np1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #


prepare() {
  cd ${_realname}-${pkgver}-rc2
  apply_patch_with_msg \
    0001-Windows-Add-missing-stringapiset.h-include.patch \
    0003-Disable-response-files-for-MSYS-Generator.patch \
    0005-Do-not-install-Qt-bundle-in-cmake-gui.patch \
    0006-pkg-config-Add-dont-define-prefix-when-PKG_CONFIG_WI.patch \
    0007-Do-not-generate-import-libs-for-exes.patch \
    0008-Output-line-numbers-in-callstacks.patch
    
#    0009-Support-exporting-all-symbols-with-MinGW.patch
}

build() {
  mkdir -p "${srcdir}/build-${MINGW_CHOST}"
  cd "${srcdir}/build-${MINGW_CHOST}"

  MSYSTEM=MINGW FC=${MINGW_PREFIX}/bin/gfortran.exe \
    "${srcdir}"/${_realname}-${pkgver}-rc2/configure  \
    --prefix=${MINGW_PREFIX}                      \
    --system-libs                                 \
    --no-system-expat                             \
    --no-qt-gui                                      \
    --parallel=8
  plain "Start building..."
  nice -n19 make
}

check() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  ./bin/ctest.exe -j$(($(nproc)+1))
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  ./bin/cmake.exe \
     -DCMAKE_INSTALL_PREFIX:PATH=${pkgdir}${MINGW_PREFIX} \
     -DCMAKE_INSTALL_LOCAL_ONLY:BOOL=OFF -P cmake_install.cmake
  install -d "${pkgdir}${MINGW_PREFIX}"/share/emacs/site-lisp/
  ${MINGW_PREFIX}/bin/emacs -batch -f batch-byte-compile \
    "${pkgdir}${MINGW_PREFIX}"/share/emacs/site-lisp/cmake-mode.el
}
